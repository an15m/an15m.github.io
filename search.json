[{"title":"fsat git","url":"/2017/08/30/fsat-git/","content":"<Excerpt in index | 首页摘要>\ngit clone慢的解决方法\n<!-- more -->\n<The rest of contents | 余下全文>\n- 首先你要有一个代理，推荐[shadowsocks](https://github.com/shadowsocks)\n\n### 为`http`和`https`协议设置socks5代理\n```bash\ngit config --global http.proxy 'socks5://<your_proxy_host>:<your_proxy_port>'\ngit config --global https.proxy 'socks5://<your_proxy_host>:<your_proxy_port>'\n```\n\n### 为`git`协议设置socks5代理\n\n#### 以下格式使用的是`git`协议\n```bash\ngit clone git://github.com/git/git.git\n```\n\n#### 首先创建一个文件`git-proxy`，写入以下内容：\n```bash\n#!/bin/bash\nnc -x <your_proxy_host>:<your_proxy_port> $1 $2\n```\n这里的`nc`是`netcat openbsd`而不是`netcat traditional`。\n给文件添加可执行权限`sudo chmod +x git-proxy`。\n\n#### 将`git-proxy`文件所在文件夹加入环境变量`$PATH`（记得刷新环境变量）。\n\n#### 配置`core.gitProxy`：\n```bash\ngit config --global --add core.gitProxy git-proxy\n```\n\n### 为`ssh`协议设置socck5代理：\n\n#### 以下格式使用的是`ssh`协议：\n```bash\ngit clone git@github.com:git/git.git\n```\n\n#### 在配置之前首先运行以下命令确保你能`ssh`到你想连接的网站。例如`github`：\n```bash\nssh -vT git@github.com\n```\n出现以下回应说明成功：\n```nohighlight\nHi your_username! You've successfully authenticated, but GitHub does not provide shell access.\n```\n\n#### 以下方法不一定每个人都能用，取决于你的代理服务商有没有提供相关功能：\n修改 `~/.ssh/config` 加入如下内容：\n全局代理：\n```bash\nProxyCommand nc -X 5 -x <your_proxy_host>:<your_proxy_port> %h %p\n```\n特定域名进行代理：\n```bash\nHost 域名\nProxyCommand nc -X 5 -x <your_proxy_host>:<your_proxy_port> %h %p\n\nHost github.com\nProxyCommand nc -X 5 -x <your_proxy_host>:<your_proxy_port> %h %p\n```\n如果`git clone git@github:git/git.git`长时间无反应，最后报以下错误：\n```nohighlight\nssh_exchange_identification: Connection closed by remote host\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n```\n说明代理服务商不支持相关功能。\n\n\n\n\n\n\n\n\n\n\n\n> 如果文章对你有帮助,请去我的博客留个言吧! [我的博客][1]\n\n[1]: http://an15m.tk\n","tags":["git"],"categories":["git"]},{"title":"git config命令","url":"/2017/08/30/Hello-an15m/","content":"<Excerpt in index | 首页摘要>\ngit config命令相关知识\n<!-- more -->\n<The rest of contents | 余下全文>\n\n## 配置目录\n### git配置目录分三级:\n- 仓库级，通过`--local`配置，在当前仓库下`.git/config`\n- 全局级，通过`--global`配置，在用户目录下`~/.gitconfig`\n- 系统级，通过`--system`配置，在`/etc/gitconfig`中\n- 配置文件的权重是`仓库>全局>系统`\n\n## 一些配置详解\n- `core.gitProxy`：当使用Git协议抓取时（作为命令主机端口？）执行的“代理命令”，而不是直接建立连接。如果变量值使用“COMMAND FOR DOMAIN”的格式，则该命令仅适用于以指定的域字符串结尾的主机名。该变量可以多次设置，并按照给定的顺序进行匹配; 以第一次匹配到的为准。\n这个配置可以被`GIT_PROXY_COMMAND`环境变量覆盖（它始终普遍应用）。\n特殊字符串`none`可以用作代理命令来指定给定域模式不使用任何代理。 这有助于在为外部域使用通用代理的同时从代理使用中排除防火墙内的服务器。\n- `http.sslVerify `：是否在获取或推送HTTPS时验证SSL证书。 可以被`GIT_SSL_NO_VERIY`环境变量覆盖。\n- `http.sslCert`：获取或推送HTTPS时包含SSL证书的文件。 可以被`GIT_SSL_CERT`环境变量覆盖。\n- `http.sslKey`：获取或推送HTTPS时包含SSL私钥的文件。 可以被`GIT_SSL_KEY`环境变量覆盖。\n\n\n\n\n> 如果文章对你有帮助,请去我的博客留个言吧! [我的博客][1]\n\n[1]: http://an15m.tk\n","tags":["config"],"categories":["git"]},{"title":"Hello World!","url":"/2017/08/25/Hello-World-0/","content":"<Excerpt in index | 首页摘要>\nnice aaaa \nbbbbbbb\n<!-- more -->\n<The rest of contents | 余下全文>\n\n## bb\nccc","tags":["test"],"categories":["test"]}]